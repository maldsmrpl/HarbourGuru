@model HarbourGuru.MVC.ViewModel.HarbourCardEditViewModel

@{
    ViewData["Title"] = "Edit Harbour Card";
}

<h1>Edit Harbour Card</h1>

<form asp-action="Edit" method="post">
    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Description" class="control-label"></label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Address" class="control-label"></label>
        <input asp-for="Address" class="form-control" />
        <span asp-validation-for="Address" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Email" class="control-label"></label>
        <input asp-for="Email" class="form-control" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Website" class="control-label"></label>
        <input asp-for="Website" class="form-control" />
        <span asp-validation-for="Website" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="HarbourCardCategoryId" class="control-label">Category</label>
        <select asp-for="HarbourCardCategoryId" class="form-control" asp-items="@(new SelectList(Model.Categories, "HarbourCardCategoryId", "HarbourCardCategoryName"))"></select>
        <span asp-validation-for="HarbourCardCategoryId" class="text-danger"></span>
    </div>
    <div id="phoneNumbers">
        @for (int i = 0; i < Model.Phones.Count; i++)
        {
            <div class="form-group phone-group">
                <label>Phone Number</label>
                <div class="input-group">
                    <input type="text" name="Phones[@i].HarbourCardPhoneNumber" class="form-control phone-input" value="@Model.Phones[i].HarbourCardPhoneNumber" placeholder="Phone Number" />
                    <input type="text" name="Phones[@i].HarbourCardPhoneDescription" class="form-control phone-description-input" value="@Model.Phones[i].HarbourCardPhoneDescription" placeholder="Description" />
                    <div class="input-group-append">
                        <button type="button" class="btn btn-secondary @((i == Model.Phones.Count - 1) ? "add-phone-button" : "remove-phone-button")" @(i == Model.Phones.Count - 1 ? "disabled" : "")>
                            @((i == Model.Phones.Count - 1) ? "Add" : "Remove")
                        </button>
                    </div>
                </div>
                <span class="text-danger"></span>
            </div>
        }
    </div>
    <input type="hidden" asp-for="HarbourCardId" />
    <input type="hidden" asp-for="HarbourId" />
    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />
    </div>
</form>

<div>
    <a asp-action="Details" asp-controller="Harbour" asp-route-countryCodeA2="@ViewData["countryCodeA2"]" asp-route-harbourCode="@ViewData["harbourCode"]">Back to List</a>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var phoneNumbersDiv = document.getElementById('phoneNumbers');

            phoneNumbersDiv.addEventListener('input', function (event) {
                if (event.target.classList.contains('phone-input') || event.target.classList.contains('phone-description-input')) {
                    var inputGroup = event.target.closest('.input-group');
                    var phoneInput = inputGroup.querySelector('.phone-input');
                    var addButton = inputGroup.querySelector('.add-phone-button');
                    addButton.disabled = !phoneInput.value.trim();
                }
            });

            phoneNumbersDiv.addEventListener('click', function (event) {
                if (event.target.classList.contains('add-phone-button')) {
                    var index = phoneNumbersDiv.querySelectorAll('.phone-group').length;
                    var newPhoneInput = `
                                <div class="form-group phone-group">
                                    <label>Phone Number</label>
                                    <div class="input-group">
                                        <input type="text" name="Phones[${index}].HarbourCardPhoneNumber" class="form-control phone-input" placeholder="Phone Number" />
                                        <input type="text" name="Phones[${index}].HarbourCardPhoneDescription" class="form-control phone-description-input" placeholder="Description" />
                                        <div class="input-group-append">
                                            <button type="button" class="btn btn-secondary add-phone-button" disabled>Add</button>
                                        </div>
                                    </div>
                                    <span class="text-danger"></span>
                                </div>
                            `;
                    phoneNumbersDiv.insertAdjacentHTML('beforeend', newPhoneInput);

                    event.target.textContent = 'Remove';
                    event.target.classList.remove('add-phone-button');
                    event.target.classList.add('remove-phone-button');
                    event.target.classList.replace('btn-secondary', 'btn-danger');
                } else if (event.target.classList.contains('remove-phone-button')) {
                    event.target.closest('.phone-group').remove();
                }
            });
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
